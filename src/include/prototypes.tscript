
// ============================================================
// Rooms
// ============================================================

room archetype r_allrooms
{
	function OnRoomEntered()
	{
		// Override me.
		textln(strformat("[ENTERED [0]]", [identity(this)]));
	}

	function OnLookAround()
	{
		// Override me.
		textln(strformat("[IT LOOKS LIKE [0]]", [identity(this)]));
	}

	function OnFirstVisit()
	{
		// Override me.
		textln(strformat("[FIRST VISIT [0]]", [identity(this)]));
	}

	function OnReVisit()
	{
		// Override me.
		textln(strformat("[RE-VISIT [0]]", [identity(this)]));
	}

	function OnDirections()
	{
		// Override me.
	}

	function look()
	{
		OnLookAround();
		Browse(room);
		textln("");
		OnDirections();
	}

	onAction(a_lookaround)
	{
		look();
	}

	onAction(a_visit)
	{
		OnRoomEntered();
		if (!_visited)
		{
			OnFirstVisit();
			look();
		}
		else
		{
			OnReVisit();			
		}
		_visited = true;
	}

}

room r_intro : r_allrooms;
room r_northwestroom : r_allrooms;
room r_westroom : r_allrooms;
room r_southwestroom : r_allrooms;
room r_southroom : r_allrooms;
room r_southeastroom : r_allrooms;
room r_eastroom : r_allrooms;
room r_northeastroom : r_allrooms;
room r_northroom : r_allrooms;

// ============================================================
// Objects
// ============================================================

// Every object does this stuff.
object archetype o_allobjects
{
	function InitTags()
	{
		// Override me.
	}

	init()
	{
		InitTags();
	}

	onActionWithOther(a_use)
	{
		textln("You can't use those things together.");
	}

}

// Examinable objects.
object archetype o_examineable : o_allobjects
{
	function OnExamineFirst()
	{
		// Override me.
	}

	function OnExamineNext()
	{
		// Override me.
	}

	function OnExamineEvery()
	{
		// Override me.
	}

	onAction(a_examine)
	{
		if (!_examined)
			OnExamineFirst();
		else
			OnExamineNext();
		OnExamineEvery();
		_examined = true;
	}

}

// Objects that can be taken.
object archetype o_takeable : o_examineable
{
	override function InitTags()
	{
		AddObjectTag(this, "takeable");
	}

	function OnTake()
	{
		textln("You take it.");
		Tips.show(TIP_INVENTORY);
	}

	function OnAlreadyHave()
	{
		textln("You already have it.");
	}

	onAction(a_take)
	{
		if (HasObject(player, this))
			OnAlreadyHave();
		else
		{
			GiveObject(player, this);
			OnTake();
		}
	}

}

object o_compass : o_examineable
	named "compass"
	uses determiners "my", "the";

object o_exitdoor : o_examineable 
	named "big door", "door"
	uses determiners "the"; 

object o_exitdoorkeyhole : o_examineable 
	named "keyhole", "big door keyhole", "big door's keyhole"
	uses determiners "the"; 

object o_exitdoorplacard : o_examineable
	named "placard", "door placard", "shiny door placard", "shiny placard"
	uses determiners "the";

object o_exitkey : o_takeable 
	named "big key", "key"
	uses determiners "the";

object o_floorplate : o_examineable 
	named "slab", "floor plate", "floorplate", "plate"
	uses determiners "the";

object o_ouroboros : o_examineable 
	named "painting", "painting of snake"
	uses determiners "the";

object o_punchedouroboros : o_examineable 
	named "painting", "painting of snake"
	uses determiners "the";

object o_ironkey : o_takeable 
	named "small iron key", "iron key", "key"
	uses determiners "the";

object o_irondoor : o_examineable
	named "iron door", "door"
	uses determiners "the";
